{"mappings":"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","sources":["<anon>","src/rc10r_drums_maker.js"],"sourcesContent":["var $b9ec2aefa5191a9b$exports = {};\nconst $b9ec2aefa5191a9b$var$INSTS = [\n    // [81, 'Open Triangle'],\n    // [80, 'Mute Triangle'],\n    // [79, 'Open Cuica'],\n    // [78, 'Mute Cuica'],\n    // [77, 'Low Wood Block'],\n    // [76, 'High Wood Block'],\n    // [75, 'Claves'],\n    // [74, 'Long Guiro'],\n    // [73, 'Short Guiro'],\n    // [72, 'Long Whistle'],\n    // [71, 'Short Whistle'],\n    // [70, 'Maracas'],\n    // [69, 'Cabasa'],\n    // [68, 'Low Agogo'],\n    // [67, 'High Agogo'],\n    // [66, 'Low Timbale'],\n    // [65, 'High Timbale'],\n    // [64, 'Low Conga'],\n    // [63, 'Open High Conga'],\n    // [62, 'Mute High Conga'],\n    // [61, 'Low Bongo'],\n    // [60, 'High Bongo'],\n    // [59, 'Ride Cymbal 2'],\n    // [58, 'Vibra-slap'],\n    // [57, 'Crash Cymbal 2'],\n    // [56, 'Cowbell'],\n    // [55, 'Splash Cymbal'],\n    // [54, 'Tambourine'],\n    // [53, 'Ride Bell'],\n    [\n        52,\n        'Chinese Cymbal'\n    ],\n    [\n        51,\n        'Ride Cymbal 1'\n    ],\n    [\n        50,\n        'High Tom'\n    ],\n    [\n        49,\n        'Crash Cymbal 1'\n    ],\n    [\n        48,\n        'High Mid Tom'\n    ],\n    [\n        47,\n        'Low-Mid Tom'\n    ],\n    [\n        46,\n        'Open Hi-hat'\n    ],\n    [\n        45,\n        'Low Tom'\n    ],\n    [\n        44,\n        'Pedal Hi-hat'\n    ],\n    [\n        43,\n        'High Floor Tom'\n    ],\n    [\n        42,\n        'Closed Hi-hat'\n    ],\n    [\n        41,\n        'Low Floor Tom'\n    ],\n    [\n        40,\n        'Electric Snare'\n    ],\n    [\n        39,\n        'Hand Clap'\n    ],\n    [\n        38,\n        'Acoustic Snare'\n    ],\n    [\n        37,\n        'Side Stick'\n    ],\n    [\n        36,\n        'Bass Drum 1'\n    ]\n];\nconst $b9ec2aefa5191a9b$var$instIds = $b9ec2aefa5191a9b$var$INSTS.map((inst)=>inst[0]);\nconst $b9ec2aefa5191a9b$var$instNames = $b9ec2aefa5191a9b$var$INSTS.map((inst)=>inst[1]);\nconst $b9ec2aefa5191a9b$var$CELL_SIZE = Math.floor((window.innerHeight - 20) / $b9ec2aefa5191a9b$var$INSTS.length);\nconst $b9ec2aefa5191a9b$var$BPM = 120;\nconst $b9ec2aefa5191a9b$var$NOTES_IN_BAR = 8;\nconst $b9ec2aefa5191a9b$var$BAR_NUM = 20;\nfunction $b9ec2aefa5191a9b$var$main() {\n    const canvas = document.createElement('canvas');\n    canvas.width = $b9ec2aefa5191a9b$var$CELL_SIZE * $b9ec2aefa5191a9b$var$NOTES_IN_BAR * $b9ec2aefa5191a9b$var$BAR_NUM;\n    canvas.height = $b9ec2aefa5191a9b$var$CELL_SIZE * $b9ec2aefa5191a9b$var$INSTS.length;\n    document.body.appendChild(canvas);\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n    //\n    const logElem = document.querySelector('#log');\n    const dlBtn = document.querySelector('#dl-btn');\n    const clearBtn = document.querySelector('#clear-btn');\n    //\n    class Vector2 {\n        constructor(x, y){\n            this.x = x;\n            this.y = y;\n        }\n    }\n    const load = ()=>{\n        return JSON.parse(localStorage.getItem('RC10R_DRUMS_NOTES') || '[]');\n    };\n    const save = ()=>{\n        localStorage.setItem('RC10R_DRUMS_NOTES', JSON.stringify(notes));\n    };\n    let notes = load();\n    // Events\n    let isPressed = false;\n    let mousedownPosition = new Vector2(0, 0);\n    const getMousePositionByE = (e)=>{\n        const rect = e.target.getBoundingClientRect();\n        return {\n            x: e.clientX - rect.left,\n            y: e.clientY - rect.top\n        };\n    };\n    canvas.addEventListener('mousedown', (e)=>{\n        const mpos = getMousePositionByE(e);\n        const xIndex = Math.floor(mpos.x / $b9ec2aefa5191a9b$var$CELL_SIZE);\n        const instIndex = Math.floor(mpos.y / $b9ec2aefa5191a9b$var$CELL_SIZE);\n        mousedownPosition = new Vector2(xIndex, instIndex);\n        //\n        if (isPressed) return;\n        isPressed = true;\n    });\n    canvas.addEventListener('mousemove', (e)=>{\n        if (!isPressed) return;\n    });\n    canvas.addEventListener('mouseup', (e)=>{\n        const mpos = getMousePositionByE(e);\n        const instIndex = Math.floor(mpos.y / $b9ec2aefa5191a9b$var$CELL_SIZE);\n        const xIndex = Math.floor(mpos.x / $b9ec2aefa5191a9b$var$CELL_SIZE);\n        if (mousedownPosition.x === xIndex && mousedownPosition.y === instIndex) {\n            const existsNoteIndex = notes.findIndex((n)=>n.x === xIndex && n.y === instIndex);\n            if (existsNoteIndex >= 0) notes.splice(existsNoteIndex, 1);\n            else notes.push(new Vector2(xIndex, instIndex));\n            save();\n        }\n        //\n        if (!isPressed) return;\n        isPressed = false;\n    });\n    //\n    clearBtn.addEventListener('click', ()=>{\n        notes = [];\n        save();\n    });\n    dlBtn.addEventListener('click', ()=>{\n        const midi = new Midi();\n        const track = midi.addTrack();\n        const cellDuration = 1 / ($b9ec2aefa5191a9b$var$BPM / 60) / ($b9ec2aefa5191a9b$var$NOTES_IN_BAR / 4);\n        notes.forEach((note)=>{\n            track.addNote({\n                midi: $b9ec2aefa5191a9b$var$instIds[note.y],\n                time: cellDuration * note.x,\n                duration: cellDuration\n            });\n        });\n        const blob = new Blob([\n            midi.toArray()\n        ], {\n            type: 'audio/midi'\n        });\n        const url = URL.createObjectURL(blob);\n        const a = document.createElement('a');\n        a.href = url;\n        a.download = 'download.mid';\n        a.click();\n        URL.revokeObjectURL(url);\n    });\n    // Render\n    const render = ()=>{\n        // BG\n        ctx.fillStyle = '#000000';\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\n        //\n        ctx.fillStyle = 'rgba(255, 0, 0, 0.3)';\n        ctx.fillRect(0, 0, $b9ec2aefa5191a9b$var$NOTES_IN_BAR * $b9ec2aefa5191a9b$var$CELL_SIZE * 1, canvas.height);\n        ctx.fillStyle = 'rgba(255, 255, 0, 0.3)';\n        ctx.fillRect($b9ec2aefa5191a9b$var$NOTES_IN_BAR * $b9ec2aefa5191a9b$var$CELL_SIZE, 0, $b9ec2aefa5191a9b$var$NOTES_IN_BAR * $b9ec2aefa5191a9b$var$CELL_SIZE * 8, canvas.height);\n        ctx.fillStyle = 'rgba(0, 255, 0, 0.3)';\n        ctx.fillRect($b9ec2aefa5191a9b$var$NOTES_IN_BAR * $b9ec2aefa5191a9b$var$CELL_SIZE * 9, 0, $b9ec2aefa5191a9b$var$NOTES_IN_BAR * $b9ec2aefa5191a9b$var$CELL_SIZE * 1, canvas.height);\n        ctx.fillStyle = 'rgba(0, 255, 255, 0.3)';\n        ctx.fillRect($b9ec2aefa5191a9b$var$NOTES_IN_BAR * $b9ec2aefa5191a9b$var$CELL_SIZE * 10, 0, $b9ec2aefa5191a9b$var$NOTES_IN_BAR * $b9ec2aefa5191a9b$var$CELL_SIZE * 8, canvas.height);\n        ctx.fillStyle = 'rgba(0, 0, 255, 0.3)';\n        ctx.fillRect($b9ec2aefa5191a9b$var$NOTES_IN_BAR * $b9ec2aefa5191a9b$var$CELL_SIZE * 18, 0, $b9ec2aefa5191a9b$var$NOTES_IN_BAR * $b9ec2aefa5191a9b$var$CELL_SIZE * 1, canvas.height);\n        ctx.fillStyle = 'rgba(255, 0, 255, 0.3)';\n        ctx.fillRect($b9ec2aefa5191a9b$var$NOTES_IN_BAR * $b9ec2aefa5191a9b$var$CELL_SIZE * 19, 0, $b9ec2aefa5191a9b$var$NOTES_IN_BAR * $b9ec2aefa5191a9b$var$CELL_SIZE * 1, canvas.height);\n        //\n        for(let x = 0; x < $b9ec2aefa5191a9b$var$NOTES_IN_BAR * $b9ec2aefa5191a9b$var$BAR_NUM; x += $b9ec2aefa5191a9b$var$NOTES_IN_BAR){\n            ctx.fillStyle = 'rgba(255, 255, 255, 0.1)';\n            ctx.fillRect(x * $b9ec2aefa5191a9b$var$CELL_SIZE, ($b9ec2aefa5191a9b$var$INSTS.length - 1) * $b9ec2aefa5191a9b$var$CELL_SIZE, $b9ec2aefa5191a9b$var$CELL_SIZE, $b9ec2aefa5191a9b$var$CELL_SIZE);\n        }\n        for(let x = $b9ec2aefa5191a9b$var$NOTES_IN_BAR / 2; x < $b9ec2aefa5191a9b$var$NOTES_IN_BAR * $b9ec2aefa5191a9b$var$BAR_NUM; x += $b9ec2aefa5191a9b$var$NOTES_IN_BAR){\n            ctx.fillStyle = 'rgba(255, 255, 255, 0.1)';\n            ctx.fillRect(x * $b9ec2aefa5191a9b$var$CELL_SIZE, ($b9ec2aefa5191a9b$var$INSTS.length - 3) * $b9ec2aefa5191a9b$var$CELL_SIZE, $b9ec2aefa5191a9b$var$CELL_SIZE, $b9ec2aefa5191a9b$var$CELL_SIZE);\n        }\n        //\n        for(let x = 0; x < $b9ec2aefa5191a9b$var$NOTES_IN_BAR * $b9ec2aefa5191a9b$var$BAR_NUM; x += 1){\n            ctx.fillStyle = x % $b9ec2aefa5191a9b$var$NOTES_IN_BAR === 0 ? 'rgba(255, 255, 255, 0.3)' : 'rgba(0, 0, 0, 0.3)';\n            ctx.fillRect(x * $b9ec2aefa5191a9b$var$CELL_SIZE, 0, 1, canvas.height);\n        }\n        for(let y = 0; y < $b9ec2aefa5191a9b$var$instNames.length; y += 1){\n            ctx.fillStyle = '#333';\n            ctx.fillRect(0, y * $b9ec2aefa5191a9b$var$CELL_SIZE, canvas.width, 1);\n        }\n        //\n        for(let x = 0; x < $b9ec2aefa5191a9b$var$NOTES_IN_BAR * $b9ec2aefa5191a9b$var$BAR_NUM; x += $b9ec2aefa5191a9b$var$NOTES_IN_BAR * 2)for(let y = 0; y < $b9ec2aefa5191a9b$var$instNames.length; y += 1){\n            ctx.fillStyle = 'rgba(255, 255, 255, 0.2)';\n            ctx.font = `${$b9ec2aefa5191a9b$var$CELL_SIZE}px sans-serif`;\n            ctx.textBaseline = 'top';\n            ctx.fillText($b9ec2aefa5191a9b$var$instNames[y], x * $b9ec2aefa5191a9b$var$CELL_SIZE, y * $b9ec2aefa5191a9b$var$CELL_SIZE);\n        }\n        //\n        notes.forEach((note)=>{\n            ctx.fillStyle = '#fff';\n            ctx.fillRect(note.x * $b9ec2aefa5191a9b$var$CELL_SIZE, note.y * $b9ec2aefa5191a9b$var$CELL_SIZE, $b9ec2aefa5191a9b$var$CELL_SIZE, $b9ec2aefa5191a9b$var$CELL_SIZE);\n        });\n    };\n    render();\n    setInterval(()=>render(), 125);\n}\nwindow.addEventListener('load', $b9ec2aefa5191a9b$var$main);\n\n\n//# sourceMappingURL=rc10r_drums_maker.f10adef7.js.map\n","const INSTS = [\n    // [81, 'Open Triangle'],\n    // [80, 'Mute Triangle'],\n    // [79, 'Open Cuica'],\n    // [78, 'Mute Cuica'],\n    // [77, 'Low Wood Block'],\n    // [76, 'High Wood Block'],\n    // [75, 'Claves'],\n    // [74, 'Long Guiro'],\n    // [73, 'Short Guiro'],\n    // [72, 'Long Whistle'],\n    // [71, 'Short Whistle'],\n    // [70, 'Maracas'],\n    // [69, 'Cabasa'],\n    // [68, 'Low Agogo'],\n    // [67, 'High Agogo'],\n    // [66, 'Low Timbale'],\n    // [65, 'High Timbale'],\n    // [64, 'Low Conga'],\n    // [63, 'Open High Conga'],\n    // [62, 'Mute High Conga'],\n    // [61, 'Low Bongo'],\n    // [60, 'High Bongo'],\n    // [59, 'Ride Cymbal 2'],\n    // [58, 'Vibra-slap'],\n    // [57, 'Crash Cymbal 2'],\n    // [56, 'Cowbell'],\n    // [55, 'Splash Cymbal'],\n    // [54, 'Tambourine'],\n    // [53, 'Ride Bell'],\n    [52, 'Chinese Cymbal'],\n    [51, 'Ride Cymbal 1'],\n    [50, 'High Tom'],\n    [49, 'Crash Cymbal 1'],\n    [48, 'High Mid Tom'],\n    [47, 'Low-Mid Tom'],\n    [46, 'Open Hi-hat'],\n    [45, 'Low Tom'],\n    [44, 'Pedal Hi-hat'],\n    [43, 'High Floor Tom'],\n    [42, 'Closed Hi-hat'],\n    [41, 'Low Floor Tom'],\n    [40, 'Electric Snare'],\n    [39, 'Hand Clap'],\n    [38, 'Acoustic Snare'],\n    [37, 'Side Stick'],\n    [36, 'Bass Drum 1'],\n]\nconst instIds = INSTS.map((inst) => inst[0])\nconst instNames = INSTS.map((inst) => inst[1])\nconst CELL_SIZE = Math.floor((window.innerHeight - 20) / INSTS.length)\nconst BPM = 120\nconst NOTES_IN_BAR = 8\nconst BAR_NUM = 20\n\nfunction main() {\n    const canvas = document.createElement('canvas')\n    canvas.width = CELL_SIZE * NOTES_IN_BAR * BAR_NUM\n    canvas.height = CELL_SIZE * INSTS.length\n    document.body.appendChild(canvas)\n    const ctx = canvas.getContext('2d')\n    if (!ctx) {\n        return\n    }\n\n    //\n    const logElem = document.querySelector('#log')\n    const dlBtn = document.querySelector('#dl-btn')\n    const clearBtn = document.querySelector('#clear-btn')\n\n    //\n    class Vector2 {\n        constructor(x, y) {\n            this.x = x\n            this.y = y\n        }\n    }\n    const load = () => {\n        return JSON.parse(localStorage.getItem('RC10R_DRUMS_NOTES') || '[]')\n    }\n    const save = () => {\n        localStorage.setItem('RC10R_DRUMS_NOTES', JSON.stringify(notes))\n    }\n    let notes = load()\n\n    // Events\n    let isPressed = false\n    let mousedownPosition = new Vector2(0, 0)\n    const getMousePositionByE = (e) => {\n        const rect = e.target.getBoundingClientRect()\n        return {\n            x: e.clientX - rect.left,\n            y: e.clientY - rect.top,\n        }\n    }\n    canvas.addEventListener('mousedown', (e) => {\n        const mpos = getMousePositionByE(e)\n        const xIndex = Math.floor(mpos.x / CELL_SIZE)\n        const instIndex = Math.floor(mpos.y / CELL_SIZE)\n        mousedownPosition = new Vector2(xIndex, instIndex)\n        //\n        if (isPressed) {\n            return\n        }\n        isPressed = true\n    })\n    canvas.addEventListener('mousemove', (e) => {\n        if (!isPressed) {\n            return\n        }\n    })\n    canvas.addEventListener('mouseup', (e) => {\n        const mpos = getMousePositionByE(e)\n        const instIndex = Math.floor(mpos.y / CELL_SIZE)\n        const xIndex = Math.floor(mpos.x / CELL_SIZE)\n        if (mousedownPosition.x === xIndex && mousedownPosition.y === instIndex) {\n            const existsNoteIndex = notes.findIndex((n) => n.x === xIndex && n.y === instIndex)\n            if (existsNoteIndex >= 0) {\n                notes.splice(existsNoteIndex, 1)\n            } else {\n                notes.push(new Vector2(xIndex, instIndex))\n            }\n            save()\n        }\n        //\n        if (!isPressed) {\n            return\n        }\n        isPressed = false\n    })\n\n    //\n    clearBtn.addEventListener('click', () => {\n        notes = []\n        save()\n    })\n    dlBtn.addEventListener('click', () => {\n        const midi = new Midi()\n        const track = midi.addTrack()\n        const cellDuration = 1 / (BPM / 60) / (NOTES_IN_BAR / 4)\n        notes.forEach((note) => {\n            track.addNote({\n                midi: instIds[note.y],\n                time: cellDuration * note.x,\n                duration: cellDuration,\n            })\n        })\n        const blob = new Blob([midi.toArray()], { type: 'audio/midi' })\n        const url = URL.createObjectURL(blob)\n        const a = document.createElement('a')\n        a.href = url\n        a.download = 'download.mid'\n        a.click()\n        URL.revokeObjectURL(url)\n    })\n\n    // Render\n    const render = () => {\n        // BG\n        ctx.fillStyle = '#000000'\n        ctx.fillRect(0, 0, canvas.width, canvas.height)\n        //\n        ctx.fillStyle = 'rgba(255, 0, 0, 0.3)'\n        ctx.fillRect(0, 0, NOTES_IN_BAR * CELL_SIZE * 1, canvas.height)\n        ctx.fillStyle = 'rgba(255, 255, 0, 0.3)'\n        ctx.fillRect(NOTES_IN_BAR * CELL_SIZE, 0, NOTES_IN_BAR * CELL_SIZE * 8, canvas.height)\n        ctx.fillStyle = 'rgba(0, 255, 0, 0.3)'\n        ctx.fillRect(NOTES_IN_BAR * CELL_SIZE * 9, 0, NOTES_IN_BAR * CELL_SIZE * 1, canvas.height)\n        ctx.fillStyle = 'rgba(0, 255, 255, 0.3)'\n        ctx.fillRect(NOTES_IN_BAR * CELL_SIZE * 10, 0, NOTES_IN_BAR * CELL_SIZE * 8, canvas.height)\n        ctx.fillStyle = 'rgba(0, 0, 255, 0.3)'\n        ctx.fillRect(NOTES_IN_BAR * CELL_SIZE * 18, 0, NOTES_IN_BAR * CELL_SIZE * 1, canvas.height)\n        ctx.fillStyle = 'rgba(255, 0, 255, 0.3)'\n        ctx.fillRect(NOTES_IN_BAR * CELL_SIZE * 19, 0, NOTES_IN_BAR * CELL_SIZE * 1, canvas.height)\n        //\n        for (let x = 0; x < NOTES_IN_BAR * BAR_NUM; x += NOTES_IN_BAR) {\n            ctx.fillStyle = 'rgba(255, 255, 255, 0.1)'\n            ctx.fillRect(x * CELL_SIZE, (INSTS.length - 1) * CELL_SIZE, CELL_SIZE, CELL_SIZE)\n        }\n        for (let x = NOTES_IN_BAR / 2; x < NOTES_IN_BAR * BAR_NUM; x += NOTES_IN_BAR) {\n            ctx.fillStyle = 'rgba(255, 255, 255, 0.1)'\n            ctx.fillRect(x * CELL_SIZE, (INSTS.length - 3) * CELL_SIZE, CELL_SIZE, CELL_SIZE)\n        }\n        //\n        for (let x = 0; x < NOTES_IN_BAR * BAR_NUM; x += 1) {\n            ctx.fillStyle = x % NOTES_IN_BAR === 0 ? 'rgba(255, 255, 255, 0.3)' : 'rgba(0, 0, 0, 0.3)'\n            ctx.fillRect(x * CELL_SIZE, 0, 1, canvas.height)\n        }\n        for (let y = 0; y < instNames.length; y += 1) {\n            ctx.fillStyle = '#333'\n            ctx.fillRect(0, y * CELL_SIZE, canvas.width, 1)\n        }\n        //\n        for (let x = 0; x < NOTES_IN_BAR * BAR_NUM; x += NOTES_IN_BAR * 2) {\n            for (let y = 0; y < instNames.length; y += 1) {\n                ctx.fillStyle = 'rgba(255, 255, 255, 0.2)'\n                ctx.font = `${CELL_SIZE}px sans-serif`\n                ctx.textBaseline = 'top'\n                ctx.fillText(instNames[y], x * CELL_SIZE, y * CELL_SIZE)\n            }\n        }\n        //\n        notes.forEach((note) => {\n            ctx.fillStyle = '#fff'\n            ctx.fillRect(note.x * CELL_SIZE, note.y * CELL_SIZE, CELL_SIZE, CELL_SIZE)\n        })\n    }\n    render()\n    setInterval(() => render(), 1000 / 8)\n}\n\nwindow.addEventListener('load', main)\n"],"names":["$b9ec2aefa5191a9b$var$INSTS","$b9ec2aefa5191a9b$var$instIds","map","inst","$b9ec2aefa5191a9b$var$instNames","$b9ec2aefa5191a9b$var$CELL_SIZE","Math","floor","window","innerHeight","length","addEventListener","canvas","document","createElement","width","height","body","appendChild","ctx","getContext","querySelector","dlBtn","clearBtn","Vector2","constructor","x","y","save","localStorage","setItem","JSON","stringify","notes","parse","getItem","isPressed","mousedownPosition","getMousePositionByE","e","rect","target","getBoundingClientRect","clientX","left","clientY","top","mpos","instIndex","xIndex","existsNoteIndex","findIndex","n","splice","push","midi","Midi","track","addTrack","forEach","note","addNote","time","cellDuration","duration","blob","Blob","toArray","type","url","URL","createObjectURL","a","href","download","click","revokeObjectURL","render","fillStyle","fillRect","$b9ec2aefa5191a9b$var$NOTES_IN_BAR","font","textBaseline","fillText","setInterval"],"version":3,"file":"rc10r_drums_maker.f10adef7.js.map"}